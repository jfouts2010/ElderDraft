@inherits LayoutComponentBase
@inject NavigationManager MyNavigationManager
<div class="sidebar">
    <div class="top-row pl-4 navbar navbar-dark">
        <a class="navbar-brand" href="">ElderDraft</a>
        <button class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>

    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" @onclick="ChangePick" Match="NavLinkMatch.All">
                    <span class="oi oi-document" aria-hidden="true"></span> Picks
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" @onclick="ChangeBoard" Match="NavLinkMatch.All">
                    <span class="oi oi-book" aria-hidden="true"></span> Deck/Sideboard
                </NavLink>
            </li>
            <br />
            <br />
            @if (Home)
            {
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="NewDeck" Match="NavLinkMatch.All">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Export Deck
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="ThemeTribal" Match="NavLinkMatch.All">
                        <span class="oi oi-badge" aria-hidden="true"></span> Theme/Tribe Draft
                    </NavLink>
                </li>
            }
        </ul>
    </div>
</div>

<div class="main">
    <div class="top-row px-4">
        <a href="http://blazor.net" target="_blank" class="ml-md-auto">About</a>
    </div>

    <CascadingValue Value="@Pick" Name="Pick">
        <CascadingValue Value="@SideBoard" Name="SideBoard">
            <div class="content px-4">
                @Body
            </div>
        </CascadingValue>
    </CascadingValue>
</div>
@code
{
    public bool Pick = true;
    public bool SideBoard = false;
    private bool collapseNavMenu = true;
    public bool Home { get { return MyNavigationManager.Uri == MyNavigationManager.BaseUri; } }
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    protected override async Task OnInitializedAsync()
    {
        await Task.CompletedTask;
    }
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    public void ChangePick()
    {
        Pick = true;
    }
    public void ChangeBoard()
    {
        Pick = false;
        SideBoard = false;
        StateHasChanged();
    }
}
